name: action-packsolution 

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      solution-name:
        description: "Solution Name"
        type: string
        required: true
        default: 'OrgDemo'
      branch-name:
        type: string
        required: true
      folder-path:
        type: string
        required: false
        default: '.'

jobs:
  # This workflow contains a single job called "build"
  export:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set environment variables
        run: |
          $releaseDate = (Get-Date).toString('yyyyMMdd');
          $solutionName = '${{ Inputs.solution-name }}';
          if (($inputs.'folder-path').length -gt 1 ){
            $folderPath = $inputs.'folder-path' + '/src/' + $solutionName
            $releasePath = $inputs.'folder-path' + '/release/'+ $releaseDate + '/' + $solutionName
          } else
          {
            $folderPath = 'src/' + $solutionName
            $releasePath = 'release/'+ $releaseDate + '/' + $solutionName
          }
          write-Host $releaseDate;
          write-Host $folderPath;
          write-Host $releasePath;
          write-Host ${{ Inputs.solution-name}} ;
          echo "release-date=$releaseDate"  | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append;
          echo "source-path=$folderPath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append;
          echo "release-path=$releasePath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append;
        shell: pwsh
      - name: check-branch-exists
        uses: GuillaumeFalourd/branch-exists@v1
        with:
          branch: ${{ inputs.branch-name }}
      - name: Checkout branch if exists
        if: steps.check-branch-exists.outputs.exists == true
        uses: actions/checkout@v4
           ref: ${{ inputs.branch-name }}
      - name: Checkout branch main
        if: steps.check-branch-exists.outputs.exists != true
        uses: actions/checkout@v4
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1
      - uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-file: ${{ env.release-path }}.zip
          solution-folder: ${{ env.source-path }}
          solution-type: Both
      - name: Debug output
        shell: pwsh
        run: |
          Get-ChildItem  -Recurse | foreach { write-host $_.FullName }
      - name: Commit to relase branch
        uses: EndBug/add-and-commit@v9
        with: 
          message: ${{ inputs.commitMessage }}
          new_branch: ${{ inputs.branch-name }}
          add: '${{ env.release-path }}/. --force'
